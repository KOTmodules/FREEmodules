# meta developer: @kotcheat

from .. import loader, utils
import speech_recognition as sr
from pydub import AudioSegment
import io
import os

@loader.tds
class KOTvoicetotextMod(loader.Module):
    """–ú–æ–¥—É–ª—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∏ –≤–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç (by @kotcheat)"""
    strings = {"name": "KOTvoicetotext"}

    async def client_ready(self, client, db):
        self.client = client

    @loader.command(ru_doc="–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ/–≤–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç")
    async def texcmd(self, message):
        """–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏–ª–∏ –≤–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç"""
        if not message.is_reply:
            await utils.answer(message, "<emoji document_id=6037630738545774536>‚ùì</emoji> –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏–ª–∏ –≤–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
            return

        reply_message = await message.get_reply_message()
        
        if not reply_message or (not reply_message.voice and not reply_message.video_note and not reply_message.video):
            await utils.answer(message, "<emoji document_id=6037630738545774536>‚ùì</emoji> –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏–ª–∏ –≤–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
            return
            
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
        media_type = "–≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        if reply_message.video_note:
            media_type = "–≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ"
        elif reply_message.video:
            media_type = "–≤–∏–¥–µ–æ"
            
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        await utils.answer(message, f"<emoji document_id=5325787248363314644>ü´•</emoji> –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...")
        
        try:
            # –°–∫–∞—á–∏–≤–∞–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª
            media_file = await reply_message.download_media()
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ WAV –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
            audio = AudioSegment.from_file(media_file)
            wav_io = io.BytesIO()
            audio.export(wav_io, format="wav")
            wav_io.seek(0)
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            if os.path.exists(media_file):
                os.remove(media_file)
            
            # –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏
            recognizer = sr.Recognizer()
            with sr.AudioFile(wav_io) as source:
                audio_data = recognizer.record(source)
                
            try:
                text = recognizer.recognize_google(audio_data, language="ru-RU")
                await utils.answer(message, f"<emoji document_id=5316899638177964496>‚òÅÔ∏è</emoji>: {text}")
            except sr.UnknownValueError:
                await utils.answer(message, "<emoji document_id=5800887979366944343>#‚É£</emoji> –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
            except sr.RequestError as e:
                await utils.answer(message, f"<emoji document_id=5800887979366944343>#‚É£</emoji> –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–∏—Å—É —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {e}")
        except Exception as e:
            await utils.answer(message, f"<emoji document_id=5800887979366944343>#‚É£</emoji> –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")